{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "String",
      "defaultValue": "centralus",
      "metadata": { "description": "Location for all resources." }
    },
    "keyVaultName": {
      "type": "String",
      "defaultValue": "EDLKeyVault",
      "metadata": { "description": "Name of the new Key Vault." }
    },
    "vaultSkuName": {
      "type": "String",
      "defaultValue": "standard",
      "allowedValues": [ "standard", "premium" ],
      "metadata": { "description": "The SKU of the Key Vault." }
    },
    "workflows_EDL_IP_Blocklist_name": {
      "type": "String",
      "defaultValue": "EDL-IP-Blocklist",
      "metadata": { "description": "Name of the Logic App workflow." }
    },
    "sentinelConnectionName": {
      "type": "String",
      "defaultValue": "azuresentinel-AS-IP-Blocklist",
      "metadata": { "description": "Name for the Azure Sentinel API connection." }
    },
    "keyVaultConnectionName": {
      "type": "String",
      "defaultValue": "keyvault-AS-IP-Blocklist",
      "metadata": { "description": "Name for the Key Vault API connection." }
    }
  },
  "variables": {
    "keyVaultResourceId": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
    "logicAppIdentity": "[reference(resourceId('Microsoft.Logic/workflows', parameters('workflows_EDL_IP_Blocklist_name')), '2017-07-01', 'Full').identity.principalId]",
    "sentinelConnResourceId": "[resourceId('Microsoft.Web/connections', parameters('sentinelConnectionName'))]",
    "keyVaultConnResourceId": "[resourceId('Microsoft.Web/connections', parameters('keyVaultConnectionName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2019-09-01",
      "name": "[parameters('keyVaultName')]",
      "location": "[parameters('location')]",
      "properties": {
        "tenantId": "[subscription().tenantId]",
        "sku": {
          "family": "A",
          "name": "[toUpper(parameters('vaultSkuName'))]"
        },
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[variables('logicAppIdentity')]",
            "permissions": {
              "secrets": [ "get", "list" ]
            }
          }
        ],
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": true
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[parameters('sentinelConnectionName')]",
      "location": "[parameters('location')]",
      "properties": {
        "displayName": "[parameters('sentinelConnectionName')]",
        "api": {
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/azuresentinel')]"
        },
        "parameterValues": {
          "authentication": { "type": "ManagedServiceIdentity" }
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[parameters('keyVaultConnectionName')]",
      "location": "[parameters('location')]",
      "properties": {
        "displayName": "[parameters('keyVaultConnectionName')]",
        "api": {
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/keyvault')]"
        },
        "parameterValues": {
          "authentication": { "type": "ManagedServiceIdentity" }
        }
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2017-07-01",
      "name": "[parameters('workflows_EDL_IP_Blocklist_name')]",
      "location": "[parameters('location')]",
      "identity": { "type": "SystemAssigned" },
      "tags": { "LogicAppsCategory": "security" },
      "dependsOn": [
        "[variables('keyVaultResourceId')]",
        "[variables('sentinelConnResourceId')]",
        "[variables('keyVaultConnResourceId')]"
      ],
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": { "defaultValue": {}, "type": "Object" }
          },
          "triggers": {
            "Microsoft_Sentinel_incident": {
              "type": "ApiConnectionWebhook",
              "inputs": {
                "host": { "connection": { "name": "@parameters('$connections')['azuresentinel']['connectionId']" } },
                "body": { "callback_url": "@{listCallbackUrl()}" },
                "path": "/incident-creation"
              }
            }
          },
          "actions": {
            "Get_Secret": {
              "runAfter": {},
              "type": "ApiConnection",
              "inputs": {
                "host": { "connection": { "name": "@parameters('$connections')['keyvault']['connectionId']" } },
                "method": "get",
                "path": "/secrets/@{encodeURIComponent('EDL-Manager-API')}/value"
              }
            },
            "Entities_-_Get_IPs": {
              "runAfter": { "Get_Secret": [ "Succeeded" ] },
              "type": "ApiConnection",
              "inputs": {
                "host": { "connection": { "name": "@parameters('$connections')['azuresentinel']['connectionId']" } },
                "method": "post",
                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                "path": "/entities/ip"
              }
            },
            "HTTP_1": {
              "runAfter": { "Entities_-_Get_IPs": [ "Succeeded" ] },
              "type": "Http",
              "inputs": {
                "uri": "https://edlmanager.com/api/v1/sources/manual/11635/",
                "method": "GET",
                "headers": { "Authorization": "@{body('Get_Secret')?['value']}" }
              },
              "runtimeConfiguration": { "contentTransfer": { "transferMode": "Chunked" } }
            },
            "Parse_JSON": {
              "runAfter": { "HTTP_1": [ "Succeeded" ] },
              "type": "ParseJson",
              "inputs": {
                "content": "@body('HTTP_1')",
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "integer" },
                    "name": { "type": "string" },
                    "manual_entries": {
                      "type": "array",
                      "items": { "type": "string" }
                    }
                  }
                }
              }
            },
            "For_each": {
              "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
              "actions": {},
              "runAfter": { "Parse_JSON": [ "Succeeded" ] },
              "type": "Foreach"
            },
            "For_each_1": {
              "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
              "actions": {
                "Condition_1": {
                  "actions": {
                    "HTTP_3": {
                      "type": "Http",
                      "inputs": {
                        "uri": "https://edlmanager.com/api/v1/sources/manual/11635/",
                        "method": "PUT",
                        "headers": { "Authorization": "@{body('Get_Secret')?['value']}" },
                        "body": "@json(concat('{\"action\":\"add\",\"manual_entries\":[\"', item()?['Address'], '\"]}'))"
                      },
                      "runtimeConfiguration": { "contentTransfer": { "transferMode": "Chunked" } }
                    }
                  },
                  "else": { "actions": {} },
                  "expression": {
                    "and": [
                      {
                        "not": {
                          "contains": [
                            "@body('Parse_JSON')?['manual_entries']",
                            "@items('For_each_1')?['Address']"
                          ]
                        }
                      }
                    ]
                  },
                  "type": "If"
                }
              },
              "runAfter": { "For_each": [ "Succeeded" ] },
              "type": "Foreach"
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "azuresentinel": {
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/azuresentinel')]",
                "connectionId": "[variables('sentinelConnResourceId')]",
                "connectionName": "[parameters('sentinelConnectionName')]",
                "connectionProperties": {
                  "authentication": { "type": "ManagedServiceIdentity" }
                }
              },
              "keyvault": {
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/keyvault')]",
                "connectionId": "[variables('keyVaultConnResourceId')]",
                "connectionName": "[parameters('keyVaultConnectionName')]",
                "connectionProperties": {
                  "authentication": { "type": "ManagedServiceIdentity" }
                }
              }
            }
          }
        }
      }
    }
  ],
  "outputs": {
    "keyVaultUri": {
      "type": "string",
      "value": "[reference(variables('keyVaultResourceId'), '2019-09-01').properties.vaultUri]"
    }
  }
}
 
